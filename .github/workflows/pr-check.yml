name: Pull Request Checks

on:
  pull_request:
    branches:
      - main

jobs:
  # Lint and Test
  lint-test:
    name: Lint and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 black

      - name: Run Black formatter check
        run: |
          black --check app.py tests/
        continue-on-error: true

      - name: Run Flake8
        run: |
          flake8 app.py --max-line-length=120
        continue-on-error: true

      - name: Run tests
        run: |
          pytest tests/ -v --cov=app --cov-report=term

  # Docker Build Test (no push)
  docker-build-test:
    name: Docker Build Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (no push)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: cicd-demo-app:pr-${{ github.event.pull_request.number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          docker build -t test-image .
          docker run -d -p 5000:5000 --name test-container test-image
          sleep 10
          curl -f http://localhost:5000/health || exit 1
          docker stop test-container
          docker rm test-container

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… Docker build successful! Image is ready for review.'
            })
